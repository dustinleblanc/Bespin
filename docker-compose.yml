version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    ports:
      - "3002:3002"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=bespin
      - REDIS_URL=redis://redis:6379
      - GITHUB_WEBHOOK_SECRET=${GITHUB_WEBHOOK_SECRET}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - SENDGRID_WEBHOOK_SECRET=${SENDGRID_WEBHOOK_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bespin-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/api/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=bespin
      - REDIS_ADDR=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bespin-network

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=8000
      - NUXT_PUBLIC_API_URL=http://localhost:3002
    depends_on:
      api:
        condition: service_healthy
    networks:
      - bespin-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - bespin-network
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=bespin
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - bespin-network

networks:
  bespin-network:
    driver: bridge

volumes:
  redis-data:
  postgres_data:
