services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: bespin
      POSTGRES_PASSWORD: bespin
      POSTGRES_DB: bespin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bespin"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../apps/api
      dockerfile: ../../infrastructure/docker/api/Dockerfile.dev
    ports:
      - "3001:3001"
    volumes:
      - ../apps/api:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=bespin
      - DB_PASSWORD=bespin
      - DB_NAME=bespin
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/bespin?schema=public
      - FRONTEND_URL=http://localhost:8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3001
      - DEBUG=bull:*,socket.io:*,socket.io-parser:*,engine:*,engine.io:*
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  web:
    build:
      context: ../apps/web
      dockerfile: ../../infrastructure/docker/web/Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ../apps/web:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=8000
      - NUXT_PUBLIC_API_URL=http://localhost:3001
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data:
